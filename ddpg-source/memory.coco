import random
from collections import deque


class ReplayMemory:

    def __init__(self, memory_size):
        self.memory_size = memory_size
        self.memory = deque()

    def add(self, obs, act, r, done, next_obs):
        self.memory.append((obs, act, r, done, next_obs))
        while len(self.memory) > self.memory_size:
            self.memory.popleft()

    def sample(self, batch_size):
        sampled_inds = random.sample(
            range(len(self.memory)),
            min(len(self.memory), batch_size),
        )

        # only iterate through the deque once
        batch = []
        for i, (obs, act, r, done, next_obs) in enumerate(self.memory):
            if i in sampled_inds:
                batch.append((obs, act, r, done, next_obs))

        return zip(*batch)

    def __len__(self) =
        len(self.memory)
